---
- hosts: localhost
  gather_facts: False

  vars:
    # The following define the commands use to control NTFS acls on the newly created volume path
    - userperms:
        storageadmin: {acct: "{{ storageadmin_acct }}", ntfs_rights: "full-control", share_permissions: "full_control"}
        useradmin:    {acct: "{{ useradmin_acct }}", ntfs_rights: "full-control", share_permissions: "full_control"}
        usergroup:    {acct: "{{ usergroup_acct }}", ntfs_rights: "modify", share_permissions: "change"}

    - hardenntfs: 
        -  "'vserver', 'security', 'file-directory', 'policy', 'create', '-vserver', '{{ svm }}', '-policy-name', 'pol-{{ volume_share }}'"
        -  "'vserver', 'security', 'file-directory', 'ntfs', 'create', '-vserver', '{{ svm }}', '-ntfs-sd', 'pol-{{ volume_share }}', '-owner', '{{ userperms['storageadmin'].acct }}"
        -  "'vserver', 'security', 'file-directory', 'ntfs', 'dacl', 'add', '-vserver', '{{ svm }}', '-ntfs-sd', 'pol-{{ volume_share }}', '-access-type', 'allow', '-account', '{{ userperms['storageadmin']['acct'] }}', '-apply-to', 'this-folder,sub-folders,files', '-advanced-rights', '{{ userperms['storageadmin']['ntfs_rights'] }}"
        -  "'vserver', 'security', 'file-directory', 'ntfs', 'dacl', 'add', '-vserver', '{{ svm }}', '-ntfs-sd', 'pol-{{ volume_share }}', '-access-type', 'allow', '-account', '{{ userperms['useradmin']['acct'] }}', '-apply-to', 'this-folder,sub-folders,files', '-advanced-rights', '{{ userperms['useradmin']['ntfs_rights'] }}"
        -  "'vserver', 'security', 'file-directory', 'ntfs', 'dacl', 'add', '-vserver', '{{ svm }}', '-ntfs-sd', 'pol-{{ volume_share }}', '-access-type', 'allow', '-account', '{{ userperms['usergroup']['acct'] }}', '-rights', '{{ userperms['usergroup']['ntfs_rights'] }}', '-apply-to', 'this-folder,sub-folders,files'"
        -  "'vserver', 'security', 'file-directory', 'ntfs', 'dacl', 'remove', '-vserver', '{{ svm }}', '-ntfs-sd', 'pol-{{ volume_share }}', '-access-type', 'allow', '-account', 'BUILTIN\\Users'"
        -  "'vserver', 'security', 'file-directory', 'policy', 'task', 'add', '-vserver', '{{ svm }}', '-policy-name', 'pol-{{ volume_share }}', '-path', '/{{ volume_share }}', '-ntfs-sd', 'pol-{{ volume_share }}', '-ntfs-mode', 'replace'"
        -  "'vserver', 'security', 'file-directory', 'apply', '-vserver', '{{ svm }}'' , '-policy-name', 'pol-{{ volume_share }}'"

    - clean_up_harden:
        -  "'vserver', 'security', 'file-directory', 'policy', 'delete', '-vserver', '{{ svm }}', '-policy-name', 'pol-{{ volume_share }}'"
        -  "'vserver', 'security', 'file-directory', 'ntfs', 'delete', '-vserver', '{{ svm }}', '-ntfs-sd', 'pol-{{ volume_share }}'"

  vars_files:
    - secret.yml
    - uservars.yml
    - defaultvars.yml

  tasks:
    - name: Create or remove FlexVol "{{ volume_share }}" with QoS adaptive
      na_ontap_volume:
        state: "{{ state }}"
        name: "{{ volume_share }}"
        junction_path: "/{{volume_share}}"
        aggregate_name: "{{ aggr }}"
        size: "{{ vol_gb_size }}"
        size_unit: gb
        encrypt: "{{ encrypt }}"
        space_guarantee: "{{ vol_space_guarantee }}"
        policy: "{{ vol_export_policy }}"
        percent_snapshot_space: "{{ vol_snapshot_pct}}"
        qos_adaptive_policy_group: "{{ vol_qospolicy }}"
        vserver: "{{ svm }}"
        wait_for_completion: True
        hostname: "{{ netapp_hostname }}"
        username: "{{ netapp_username }}"
        password: "{{ netapp_password }}"

    - name: Create CIFS share
      na_ontap_cifs:
        state: "{{ state }}"
        share_name: "{{ volume_share }}"
        path: "/{{ volume_share }}"
        vserver: "{{ svm }}"
        share_properties: "{{ share_properties }}"
        hostname: "{{ netapp_hostname }}"
        username: "{{ netapp_username }}"
        password: "{{ netapp_password }}"

    - name: Remove Eveyone from share Permissions
      na_ontap_cifs_acl:
        state: absent
        share_name: "{{ volume_share }}"
        user_or_group: Everyone
        permission: change
        vserver: "{{ svm }}"
        hostname: "{{ netapp_hostname }}"
        username: "{{ netapp_username }}"
        password: "{{ netapp_password }}"
      tags:
        - harden
      when: state == "present"

    - name: Add explicit group to share
      na_ontap_cifs_acl:
        state: present
        share_name: "{{ volume_share }}"
        user_or_group: "{{ admin_acct }}"
        permission: full_control
        vserver: "{{ svm }}"
        hostname: "{{ netapp_hostname }}"
        username: "{{ netapp_username }}"
        password: "{{ netapp_password }}"
      tags:
        - harden
        - no-admin-access
      when: state == "present"

    - name: Add explicit group to share
      na_ontap_cifs_acl:
        state: present
        share_name: "{{ volume_share }}"
        user_or_group: "{{ user_acct }}"
        permission: "{{ user_permission }}"
        vserver: "{{ svm }}"
        hostname: "{{ netapp_hostname }}"
        username: "{{ netapp_username }}"
        password: "{{ netapp_password }}"
      tags:
        - harden
      when: state == "present"

    - name: Set NTFS Security on Volumes
      na_ontap_command:
        hostname: "{{ netapp_hostname }}"
        username: "{{ netapp_username }}"
        password: "{{ netapp_password }}"
        command: "{{ item }}"
        privilege: 'admin'
        return_dict: True
      with_items:
        - "{{ hardenntfs }}"
      tags:
        - harden
      when: state == "present"

    - name: Clean-up NTFS Security on Volumes
      na_ontap_command:
        hostname: "{{ netapp_hostname }}"
        username: "{{ netapp_username }}"
        password: "{{ netapp_password }}"
        command: "{{ item }}"
        privilege: 'admin'
        return_dict: True
      with_items:
        - "{{ clean_up_harden }}"
      tags:
        - harden
      when: state == "absent"
